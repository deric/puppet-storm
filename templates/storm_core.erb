
#_ STORM CONFIGURATION _#
#_ MANAGED BY PUPPET - DO NOT EDIT _#

#_ CORE _#
java.library.path: "<%= @java_library_path.join(':') %>"
storm.local.dir: "<%= @local_dir %>"
storm.cluster.mode: "<%= @cluster_mode %>"
storm.local.mode.zmq: <%= @local_mode_zmq %>
storm.home: "<%= @home %>"

storm.thrift.transport: "backtype.storm.security.auth.SimpleTransportPlugin"
storm.principal.tolocal: "backtype.storm.security.auth.DefaultPrincipalToLocal"
storm.group.mapping.service: "backtype.storm.security.auth.ShellBasedGroupsMapping"
storm.messaging.transport: "backtype.storm.messaging.netty.Context"

#_ ZOOKEEPER _#
storm.zookeeper.servers:
<% @zookeeper_servers.each do |z| -%>
    - "<%= z %>"
<% end-%>
storm.zookeeper.port: <%= @zookeeper_port %>
storm.zookeeper.root: "<%= @zookeeper_root %>"
storm.zookeeper.session.timeout: <%= @zookeeper_session_timeout %>
storm.zookeeper.retry.times: <%= @zookeeper_retry_times %>
storm.zookeeper.retry.interval: <%= @zookeeper_retry_interval %>
dev.zookeeper.path: "<%= @dev_zookeeper_path %>"
storm.zookeeper.retry.intervalceiling.millis: 30000


transactional.zookeeper.root: "<%= @transactional_zookeeper_root %>"
transactional.zookeeper.servers: <%= @transactional_zookeeper_servers %>
transactional.zookeeper.port: <%= @transactional_zookeeper_port %>


#_ WORKER _#
worker.childopts: "<%= @worker_childopts %>"
worker.gc.childopts: ""
worker.heartbeat.frequency.secs: <%= @worker_heartbeat_frequency_secs %>
task.heartbeat.frequency.secs: <%= @task_heartbeat_frequency_secs %>
task.refresh.poll.secs: <%= @task_refresh_poll_secs %>
task.credentials.poll.secs: 30

#_ NETTY _#
storm.messaging.netty.server_worker_threads: <%= @netty_server_worker_threads %>
storm.messaging.netty.client_worker_threads: <%= @netty_client_worker_threads %>
storm.messaging.netty.buffer_size: <%= @netty_buffer_size %>
storm.messaging.netty.max_retries: <%= @netty_max_retries %>
storm.messaging.netty.max_wait_ms: <%= @netty_max_wait_ms %>
storm.messaging.netty.min_wait_ms: <%= @netty_min_wait_ms %>
storm.messaging.netty.transfer.batch.size: <%= @netty_transfer_batch_size %>
storm.messaging.netty.socket.backlog: <%= @netty_socket_backlog %>
storm.messaging.netty.authentication: <%= @netty_authentication %>
storm.group.mapping.service.cache.duration.secs: <%= @group_mapping_service_cache_duration_secs %>

#_ 0MQ _#
zmq.threads: <%= @zmq_threads %>
zmq.linger.millis: <%= @zmq_linger_millis %>

#_ TOPOLOGY _#
topology.debug: <%= @topology_debug %>
topology.optimize: <%= @topology_optimize %>
topology.workers: <%= @topology_workers %>
topology.ackers: <%= @topology_ackers %>
topology.message.timeout.secs: <%= @topology_message_timeout_secs %>
topology.skip.missing.kryo.registrations: <%= @topology_skip_missing_kryo_registrations %>
topology.max.task.parallelism: <%= @topology_max_task_parallelism %>
topology.max.spout.pending: <%= @topology_max_spout_pending %>
topology.state.synchronization.timeout.secs: <%= @topology_state_synchronization_timeout_secs %>
topology.stats.sample.rate: <%= @topology_stats_sample_rate %>
topology.fall.back.on.java.serialization: <%= @topology_fall_back_on_java_serialization %>
topology.worker.childopts: <%= @topology_worker_childopts %>
### topology.* configs are for specific executing storms
topology.enable.message.timeouts: true
topology.acker.executors: null
topology.tasks: null
# maximum amount of time a message has to complete before it's considered failed
topology.multilang.serializer: "backtype.storm.multilang.JsonSerializer"
topology.builtin.metrics.bucket.size.secs: 60
topology.executor.receive.buffer.size: 1024 #batched
topology.executor.send.buffer.size: 1024 #individual messages
topology.transfer.buffer.size: 1024 # batched
topology.tick.tuple.freq.secs: null
topology.worker.shared.thread.pool.size: 4
topology.disruptor.wait.strategy: "com.lmax.disruptor.BlockingWaitStrategy"
topology.spout.wait.strategy: "backtype.storm.spout.SleepSpoutWaitStrategy"
topology.sleep.spout.wait.strategy.time.ms: <%= @topology_sleep_spout_wait_strategy_time_ms %>
topology.error.throttle.interval.secs: 10
topology.max.error.report.per.interval: 5
topology.kryo.factory: "backtype.storm.serialization.DefaultKryoFactory"
topology.tuple.serializer: "backtype.storm.serialization.types.ListDelegateSerializer"
topology.trident.batch.emit.interval.millis: 500
topology.testing.always.try.serialize: false
topology.classpath: null
topology.environment: null
topology.bolts.outgoing.overflow.buffer.enable: false
topology.disruptor.wait.timeout.millis: 1000
#topology.metrics.consumer.register:
#  - class: "backtype.storm.metric.LoggingMetricsConsumer"
#    parallelism.hint: 1

